<UserControl
    x:Class="ChinChessClient.Views.OnlineChinChessView"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:chinesechess="clr-namespace:ChinChessClient.Commands"
    xmlns:models="clr-namespace:ChinChessClient.Models"
    xmlns:prism="http://prismlibrary.com/"
    prism:ViewModelLocator.AutoWireViewModel="True"
    MyAttachProperty.IsElementFocused="True">

    <UserControl.Resources>
        <ResourceDictionary Source="/ChinChessClient;component/Resources/ChineseChess.xaml" />
    </UserControl.Resources>

    <UserControl.InputBindings>
        <KeyBinding
            Key="{Binding KeyGestureDic[重玩].SelectedKey}"
            Command="{Binding RePlayCommand}"
            Modifiers="{Binding KeyGestureDic[重玩].ModifierKey}" />

        <KeyBinding
            Key="{Binding KeyGestureDic[悔棋].SelectedKey}"
            Command="{Binding RevokeCommand}"
            Modifiers="{Binding KeyGestureDic[悔棋].ModifierKey}" />

        <KeyBinding
            Key="{Binding KeyGestureDic[棋盘换向].SelectedKey}"
            Command="{Binding SwitchDirectionCommand}"
            Modifiers="{Binding KeyGestureDic[棋盘换向].ModifierKey}" />

        <KeyBinding
            Key="{Binding KeyGestureDic[模拟].SelectedKey}"
            Command="{Binding MockCommand}"
            Modifiers="{Binding KeyGestureDic[模拟].ModifierKey}" />
    </UserControl.InputBindings>

    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="3*" />
            <ColumnDefinition Width="4*" />
            <ColumnDefinition Width="3*" />
        </Grid.ColumnDefinitions>

        <Border
            Grid.Column="0"
            Margin="5,0,5,10"
            Background="#88CCCCCC"
            CornerRadius="10">
            <ListBox
                VerticalAlignment="Bottom"
                HorizontalContentAlignment="Left"
                ItemContainerStyle="{x:Null}"
                ItemsSource="{Binding Records}"
                VirtualizingPanel.IsVirtualizing="True">
                <ListBox.Resources>
                    <Style TargetType="TextBlock">
                        <Setter Property="Margin" Value="10,5" />
                        <Setter Property="Foreground" Value="Black" />

                        <Setter Property="FontSize" Value="16" />

                        <Style.Triggers>
                            <DataTrigger Binding="{Binding IsRed}" Value="True">
                                <Setter Property="Foreground" Value="Red" />
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </ListBox.Resources>
                <ListBox.ItemTemplate>
                    <DataTemplate DataType="{x:Type models:Record}">
                        <TextBlock Style="{StaticResource {x:Type TextBlock}}">
                            <TextBlock>
                                <TextBlock Text="{Binding Id}" />
                                )
                                <TextBlock Text="{Binding Time, StringFormat='MM-dd HH:mm:ss'}" />
                                <TextBlock Text="{Binding Name}" />
                                <TextBlock Text="{Binding Action}" />
                            </TextBlock>
                        </TextBlock>
                    </DataTemplate>
                </ListBox.ItemTemplate>
            </ListBox>
        </Border>

        <Viewbox Grid.Column="1" DockPanel.Dock="Bottom">
            <StackPanel>
                <DockPanel Height="80" Background="Red">
                    <StackPanel
                        Background="#2874A6"
                        DockPanel.Dock="Left"
                        Orientation="Horizontal">

                        <Border Margin="5">
                            <Grid>
                                <Image Source="../Resources/Images/默认头像.png" />

                                <TextBlock Style="{StaticResource Time_Txt}" Text="{Binding BlackSeconds}" />
                            </Grid>
                            <Border.Style>
                                <Style TargetType="Border">
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding IsRedRole}" Value="False">
                                            <Setter Property="BorderBrush" Value="White" />
                                            <Setter Property="BorderThickness" Value="3" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Border.Style>
                        </Border>

                        <Ellipse HorizontalAlignment="Left">
                            <Ellipse.Fill>
                                <ImageBrush ImageSource="../Resources/Pictures/黑将.png" />
                            </Ellipse.Fill>
                            <Ellipse.Style>
                                <Style BasedOn="{StaticResource ChineseChess_Signal}" TargetType="Ellipse">
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding IsRedTurn}" Value="True">
                                            <Setter Property="Stroke" Value="Transparent" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Ellipse.Style>
                        </Ellipse>

                        <TextBlock
                            Margin="3"
                            FontSize="20"
                            Style="{StaticResource TextBlock_Theme}"
                            Text="{Binding BlackTimeSpan, FallbackValue=00:00:00}" />
                    </StackPanel>

                    <StackPanel
                        Background="#DC7633"
                        DockPanel.Dock="Right"
                        Orientation="Horizontal">
                        <TextBlock
                            Margin="3"
                            FontSize="20"
                            Style="{StaticResource TextBlock_Theme}"
                            Text="{Binding RedTimeSpan, FallbackValue=00:00:00}" />

                        <Ellipse Grid.Row="1" Grid.Column="0">
                            <Ellipse.Fill>
                                <ImageBrush ImageSource="../Resources/Pictures/红帅.png" />
                            </Ellipse.Fill>
                            <Ellipse.Style>
                                <Style BasedOn="{StaticResource ChineseChess_Signal}" TargetType="Ellipse">
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding IsRedTurn}" Value="False">
                                            <Setter Property="Stroke" Value="Transparent" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Ellipse.Style>
                        </Ellipse>

                        <Border Margin="5">
                            <Grid>
                                <Image Source="../Resources/Images/默认头像.png" />

                                <TextBlock Style="{StaticResource Time_Txt}" Text="{Binding RedSeconds}" />
                            </Grid>
                            <Border.Style>
                                <Style TargetType="Border">
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding IsRedRole}" Value="True">
                                            <Setter Property="BorderBrush" Value="White" />
                                            <Setter Property="BorderThickness" Value="3" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Border.Style>
                        </Border>
                    </StackPanel>

                    <UniformGrid
                        HorizontalAlignment="Center"
                        VerticalAlignment="Center"
                        Columns="4"
                        DockPanel.Dock="Left">
                        <Button Style="{StaticResource SwitchDirectionButton}" />

                        <Button Style="{StaticResource RePlayButton}" />

                        <Button Style="{StaticResource CancelLastButton}" />

                        <Button IsEnabled="{Binding IsMock, Converter={StaticResource OppositeBoolConverter}}" Style="{StaticResource MockButton}" />

                        <Button Style="{StaticResource GiveUpButton}" />
                    </UniformGrid>
                </DockPanel>

                <Grid Margin="0,5,0,10">
                    <Image>
                        <Image.Style>
                            <Style TargetType="Image">
                                <Setter Property="Source" Value="../Resources/Pictures/棋盘（黑上）.png" />

                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding Angle}" Value="180">
                                        <Setter Property="Source" Value="../Resources/Pictures/棋盘（红上）.png" />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Image.Style>
                    </Image>

                    <Grid Background="#AA999999" Visibility="{Binding IsMock, Converter={StaticResource BoolToVisibleCollapsedConverter}, FallbackValue={x:Static Visibility.Collapsed}}" />

                    <ListBox
                        Padding="11"
                        ItemContainerStyle="{StaticResource ListBoxItem_General}"
                        ItemTemplate="{StaticResource Chess}"
                        ItemsSource="{Binding Datas}"
                        RenderTransformOrigin="0.5,0.5">
                        <ListBox.ItemsPanel>
                            <ItemsPanelTemplate>
                                <UniformGrid Columns="9" Rows="10" />
                            </ItemsPanelTemplate>
                        </ListBox.ItemsPanel>
                        <ListBox.RenderTransform>
                            <RotateTransform Angle="{Binding DataContext.Angle, RelativeSource={RelativeSource AncestorType=UserControl}}" />
                        </ListBox.RenderTransform>
                    </ListBox>

                    <Grid Background="#AA999999" Style="{StaticResource Element_Visible}">
                        <Button
                            FontSize="60"
                            Foreground="Gray"
                            Style="{StaticResource RePlayButton}" />
                    </Grid>

                    <Button
                        Padding="3"
                        HorizontalAlignment="Right"
                        VerticalAlignment="Top"
                        Command="{Binding MockCommand}"
                        Style="{StaticResource Button_Icon_Close}"
                        Visibility="{Binding IsMock, Converter={StaticResource BoolToVisibleCollapsedConverter}, FallbackValue={x:Static Visibility.Collapsed}}" />
                </Grid>
            </StackPanel>
        </Viewbox>

        <Border
            Grid.Column="2"
            Margin="5,0,5,10"
            Background="#88CCCCCC"
            CornerRadius="10">
            <ListBox
                VerticalAlignment="Bottom"
                ItemContainerStyle="{x:Null}"
                ItemsSource="{Binding CommandStack}">
                <ListBox.Resources>
                    <Style TargetType="TextBlock">
                        <Setter Property="Margin" Value="10,5" />
                        <Setter Property="Foreground" Value="Black" />

                        <Setter Property="FontSize" Value="30" />

                        <Style.Triggers>
                            <DataTrigger Binding="{Binding IsRed}" Value="True">
                                <Setter Property="Foreground" Value="Red" />
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </ListBox.Resources>
                <ListBox.ItemTemplate>
                    <DataTemplate DataType="{x:Type chinesechess:MoveCommand}">
                        <TextBlock Style="{StaticResource {x:Type TextBlock}}">
                            <TextBlock>
                                [
                                <TextBlock Text="{Binding Index}" />
                                ]
                                (
                                <TextBlock Text="{Binding From.Row}" />
                                ,
                                <TextBlock Text="{Binding From.Column}" />
                                ) => (
                                <TextBlock Text="{Binding To.Row}" />
                                ,
                                <TextBlock Text="{Binding To.Column}" />
                                )
                            </TextBlock>
                        </TextBlock>
                    </DataTemplate>
                </ListBox.ItemTemplate>
            </ListBox>
        </Border>

        <Popup
            IsOpen="{Binding DialogMessage.IsVisible, Mode=OneWay}"
            Placement="Center"
            PlacementTarget="{Binding RelativeSource={RelativeSource AncestorType=Window}}">
            <Border
                MinWidth="500"
                MinHeight="300"
                Background="Blue"
                CornerRadius="20"
                MouseEnter="Border_MouseEnter"
                MouseLeave="Border_MouseLeave">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="*" />
                        <RowDefinition Height="Auto" />
                    </Grid.RowDefinitions>

                    <TextBlock
                        Grid.Row="0"
                        MaxWidth="500"
                        Margin="20"
                        FontSize="24"
                        Style="{StaticResource TextBlock_Theme}"
                        Text="{Binding DialogMessage.DisplayMessage}"
                        TextWrapping="Wrap" />

                    <TextBlock
                        Grid.Row="1"
                        Margin="0,10"
                        FontSize="15"
                        Style="{StaticResource TextBlock_Theme}">
                        <TextBlock Text="{Binding DialogMessage.Seconds}" />
                        秒后关闭
                    </TextBlock>
                </Grid>
            </Border>
        </Popup>
    </Grid>
</UserControl>
